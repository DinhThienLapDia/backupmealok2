##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 43 ssl;
   # ssl on;
    server_name mealok.vn www.mealok.vn;
   # return 301 https://$host$request_uri;
    ssl_certificate    /etc/letsencrypt/archive/www.mealok.vn/fullchain1.pem;
    ssl_certificate_key  /etc/letsencrypt/archive/www.mealok.vn/privkey1.pem;
    # Tell Nginx and Passenger where your app's 'public' directory is
    root /home/namnp_hienle/workspace/sharetribe/public;

    # Turn on Passenger
    passenger_enabled on;
    passenger_ruby /home/namnp_hienle/.rvm/gems/ruby-2.3.1/wrappers/ruby;
    
#    location / {
#      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#      proxy_set_header Host $http_host;
#      proxy_set_header X-Forwarded-Proto https;
#      proxy_redirect off;
#
#      if (!-f $request_filename) {
#        proxy_pass http://upstreamy;
#        break;
#      }
# }	
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
